{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","index_es","onClick","icon","faSortDown","style","cursor","faTimes","float","color","bind","react_router_dom","to","faPencilAlt","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","faHome","faPlus","faQuestion","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1d3618f0.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case 'DELETE_CONTACT':\n           return {\n               ...state,\n               contacts: state.contacts.filter(contact =>\n                contact.id !== action.payload)\n           };\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload,\n                ...state.contacts]\n            };\n        case 'UPDATE_CONTACT':\n            return {\n              ...state,\n              contacts: state.contacts.map(contact => \n                contact.id === action.payload.id \n                ? (contact = action.payload)\n                : contact)\n            }           \n        default:\n           return state;   \n    }\n}\n\nexport class Provider extends Component {\n         state = {\n           contacts: [],\n           dispatch: action => {\n             this.setState(state => reducer(state, action));\n           }\n         };\n\n         async componentDidMount(){\n             const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\"); \n             \n             this.setState({ contacts: res.data });\n         }\n\n         render() {\n           return (\n             <Context.Provider value={this.state}>\n               {this.props.children}\n             </Context.Provider>\n           );\n         }\n       }\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSortDown, faTimes, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n  onShowClick = e =>{\n    this.setState({showContactInfo: !this.state.showContactInfo});\n  };\n\n  onDeleteClick = async (id, dispatch)=>{\n    \n    try\n    {\n      await axios.delete(\n        `https://jsonplaceholder.typicode.com/users/${id}`\n      );  \n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    } \n    catch(e) \n    {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n    \n    \n  };\n\n  render() {\n    const { id, name,email,phone } = this.props.contact;\n    const { showContactInfo }  = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <FontAwesomeIcon\n                  onClick={this.onShowClick}\n                  icon={faSortDown}\n                  style={{ cursor: \"pointer\" }}\n                />\n                <FontAwesomeIcon\n                  icon={faTimes}\n                  style={{\n                    cursor: \"pointer\",\n                    float: \"right\",\n                    color: \"red\"\n                  }}\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    id,\n                    dispatch\n                  )}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <FontAwesomeIcon\n                    icon={faPencilAlt}\n                    style={{\n                      cursor: 'pointer',\n                      float: 'right',\n                      color: 'black',\n                      marginRight: '1rem'\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n\n    )\n  }\n}\n\nContact.propTypes = {\n  contact:            PropTypes.object.isRequired\n};\n\nexport default Contact;","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {  \n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          \n          const {contacts} = value;\n\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact =>\n                <Contact\n                  key={contact.id}\n                  contact={contact}\n                >\n                </Contact>\n              )}\n            </React.Fragment>\n          )\n        }}\n      </Consumer>\n    )\n\n  }\n}\n\nexport default Contacts;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faPlus, faQuestion } from '@fortawesome/free-solid-svg-icons';\n\nconst Header = props=>{\n    \n  const {branding} = props;\n\n  return (\n    <nav \n       className=\"navbar\n        navbar-expand-sm\n        navbar-dark\n        bg-danger\n        mb-3\n        py-0\" >\n        <div \n          className=\"container\">\n          <a href=\"/\" className=\"navbar-brand\">\n            {branding}\n          </a>\n          <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <FontAwesomeIcon\n                  icon={faHome}\n                />{' '}Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <FontAwesomeIcon\n                  icon={faPlus}\n                />{' '}Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <FontAwesomeIcon\n                  icon={faQuestion}\n                />{' '}About\n              </Link>\n            </li>\n          </ul>\n          </div>\n        </div>\n\n    </nav>\n    )\n}\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n}\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n})=> {\n  return (\n      <div\n          className=\"form-group\">\n          <label htmlFor={name}>\n              {label}\n          </label>\n          <input\n              type={type}\n              name={name}\n              value={value}\n              onChange={onChange}\n              className={classnames('form-control form-control-lg',{\n                  'is-invalid':error\n              })}\n              placeholder={placeholder}>\n          </input>\n          {error && \n          <div className=\"invalid-feedback\">\n              {error}\n          </div>}\n\n      </div>\n  )\n}\n\nTextInputGroup.propTypes = {\n    label:       PropTypes.string.isRequired,\n    name:        PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value:       PropTypes.string.isRequired,\n    type:        PropTypes.string.isRequired,\n    onChange:    PropTypes.func.isRequired,\n    error:       PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n}\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport {Consumer} from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n\n    onSubmit = async (dispatch, e)=> {\n        e.preventDefault();\n        \n        const {name, email, phone } = this.state;\n\n        if (name === ''){\n            this.setState({errors: {name:'Name is required'}})\n            return;\n        }\n\n        if (email === '') {\n            this.setState({ errors: { email: 'Email is required' } })\n            return;\n        }\n\n        if (phone === '') {\n            this.setState({ errors: { phone: 'Phone is required' } })\n            return;\n        }\n\n\n        const newContact = {\n            name,\n            email,\n            phone\n        }\n\n        const res = await axios\n           .post(\"https://jsonplaceholder.typicode.com/users\",newContact);\n\n        dispatch({     \n            type: 'ADD_CONTACT', \n            payload: res.data\n        });\n\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n\n    }\n\n    onChange = e => this.setState({\n        [e.target.name]: e.target.value\n    });\n\n  render() {\n      const { name, email, phone, errors} = this.state;\n\n      return (\n          <Consumer>\n              {value => {\n                  const { dispatch } = value;\n\n                  return (\n                        <div \n                            className = \"card mb-3\" >\n                            <div\n                                className=\"card-header\">\n                                Add Contact\n                            </div>\n                            <div\n                                className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                  <TextInputGroup\n                                      label=\"Name\"\n                                      name=\"name\"\n                                      placeholder=\"Enter Name\"\n                                      value={name}\n                                      onChange={this.onChange}\n                                      error={errors.name}\n                                  >\n                                  </TextInputGroup>\n                                  <TextInputGroup\n                                      label=\"Email\"\n                                      name=\"email\"\n                                      type=\"email\"\n                                      placeholder=\"Enter Email\"\n                                      value={email}\n                                      onChange={this.onChange}\n                                      error={errors.email}\n                                  >\n                                  </TextInputGroup>\n                                  <TextInputGroup\n                                      label=\"Phone\"\n                                      name=\"phone\"\n                                      placeholder=\"Enter Phone\"\n                                      value={phone}\n                                      onChange={this.onChange}\n                                      error={errors.phone}\n                                  >\n                                  </TextInputGroup>\n\n                                    <input\n                                        type=\"submit\"\n                                        value='Add Contact'\n                                        className=\"btn btn-light btn-block\">\n                                    </input>\n                                </form>\n                            </div>\n                        </div>\n                          )\n                      }}\n          </Consumer>\n      )\n\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount(){\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    })\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n\n    const updContact = {\n      name,\n      email,\n      phone\n    }\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`, updContact\n    );\n\n    dispatch({\n      type:'UPDATE_CONTACT',\n      payload: res.data\n    });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  onChange = e =>\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from 'react'\n\nexport default ()=> {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        About Contact Manager\n      </h1>\n      <p className=\"lead\">\n        Simple app to manage contacts\n      </p>\n      <p className=\"text-secondary\">\n        Version 1.0.0\n      </p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n         <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">\n          Sorry, that page does not exist\n      </p>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\n\nclass Test extends Component {\n\n    state = {\n        title: '',\n        body: ''\n    }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\n        .then(response => response.json())\n        .then(data     => this.setState(\n            {\n                title: data.title,\n                body:  data.body\n            }\n        ));    \n  }\n\n//   componentWillMount() {\n//     console.log(\"component will mount....\");\n//   }\n\n//   componentDidUpdate() {\n//     console.log(\"component did update\");\n//   }\n\n//   componentWillReceiveProps(nextprops, nextstate) {\n//     console.log(\"componentWillReceiveProps\");\n//   }\n\n//   static getDerivedStateFromProps(nextProps, prevState) {\n//     return {\n//         test: 'something'\n//     }\n//   }\n\n//   getSnapshotBeforeUpdate(prevProps, prevState) {\n//     console.log(\"getSnapshotBeforeUpdate....\");\n//   }\n\n  render() {\n\n    const { title, body } = this.state;\n\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;","import React, { Component } from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from \"./components/contacts/EditContact\";\nimport About      from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\nclass App extends Component {\n  render() {\n    \n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}